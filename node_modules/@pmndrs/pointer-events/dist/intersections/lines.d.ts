import { Matrix4, Vector3, Object3D } from 'three';
import type { PointerCapture } from '../pointer.js';
import { Intersector } from './intersector.js';
import { Intersection, IntersectionOptions } from '../index.js';
export declare class LinesIntersector extends Intersector {
    private readonly prepareTransformation;
    private readonly options;
    private raycasters;
    private fromMatrixWorld;
    private intersectionLineIndex;
    private intersectionDistanceOnLine;
    constructor(prepareTransformation: (nativeEvent: unknown, fromMatrixWorld: Matrix4) => boolean, options: IntersectionOptions & {
        linePoints?: Array<Vector3>;
        minDistance?: number;
    });
    intersectPointerCapture({ intersection, object }: PointerCapture, nativeEvent: unknown): Intersection | undefined;
    protected prepareIntersection(nativeEvent: unknown): boolean;
    executeIntersection(object: Object3D, objectPointerEventsOrder: number | undefined): void;
    finalizeIntersection(): Intersection | undefined;
}
